// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    [Migration("20250102140547_parking_moodel_1")]
    partial class parking_moodel_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Domain.Entities.Models.ParkingLot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ParkingLots");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f53e9bac-18d3-4f91-8cc3-23bbd4c2202f"),
                            Address = "8792 Swaniawski Land, East River, Bahrain",
                            Description = "Eaque sunt culpa nihil consequatur possimus voluptatem perspiciatis.",
                            Latitude = 23.893322281006906,
                            Longitude = 89.116005293145889,
                            Name = "Gibson Group"
                        },
                        new
                        {
                            Id = new Guid("b7bab51f-45c0-4231-aaee-c08c76b77dcc"),
                            Address = "99190 Chase Key, Roobville, Kazakhstan",
                            Description = "Expedita architecto laudantium amet ratione rerum nobis hic est architecto.",
                            Latitude = 23.899766810304435,
                            Longitude = 89.129226602671721,
                            Name = "Konopelski Group"
                        },
                        new
                        {
                            Id = new Guid("13e0dfe0-5eac-4777-8ea3-7eb029491fb4"),
                            Address = "8304 Wiza Radial, North Curtstad, Ukraine",
                            Description = "A sint maiores sapiente doloremque.",
                            Latitude = 23.891193202822588,
                            Longitude = 89.141021580526711,
                            Name = "Beer LLC"
                        },
                        new
                        {
                            Id = new Guid("7719d308-09f3-4734-98fd-575b7493c6f7"),
                            Address = "49327 Daniela Vista, Champlinton, Liberia",
                            Description = "Laudantium eos mollitia accusantium id sed voluptatem nostrum.",
                            Latitude = 23.901025699738035,
                            Longitude = 89.154110956221373,
                            Name = "Miller, Dietrich and Buckridge"
                        },
                        new
                        {
                            Id = new Guid("0172c101-551e-458d-ad5e-4dc766c71318"),
                            Address = "23914 Ward Haven, Frederickview, Bahrain",
                            Description = "Harum labore quia nobis incidunt aut corrupti maiores aut debitis.",
                            Latitude = 23.901969056765701,
                            Longitude = 89.128734566096398,
                            Name = "Kreiger and Sons"
                        },
                        new
                        {
                            Id = new Guid("abce056e-eb75-4d49-9f85-73f17ff0bc12"),
                            Address = "89519 Nitzsche Ridge, Hackettton, Taiwan",
                            Description = "Sed harum ut qui quis officia.",
                            Latitude = 23.905273965553182,
                            Longitude = 89.142959768211242,
                            Name = "Windler LLC"
                        },
                        new
                        {
                            Id = new Guid("61c9ce1f-b4ee-49e4-ad17-334d2b2db138"),
                            Address = "23424 Alexys Summit, Lake Gwendolyn, Turks and Caicos Islands",
                            Description = "Repudiandae a dignissimos.",
                            Latitude = 23.891457009395459,
                            Longitude = 89.131104963351419,
                            Name = "Bailey - D'Amore"
                        },
                        new
                        {
                            Id = new Guid("a5e7342e-cf74-4886-b5a8-cb918c71b193"),
                            Address = "897 Ozella Points, Hermanland, Togo",
                            Description = "Eaque non perspiciatis reprehenderit et.",
                            Latitude = 23.883922106037883,
                            Longitude = 89.157514997272941,
                            Name = "Hoeger - Bahringer"
                        },
                        new
                        {
                            Id = new Guid("e625751d-553c-46c0-b10b-6ff1239eb152"),
                            Address = "569 Cordelia Fords, West Vladimirhaven, Uganda",
                            Description = "Velit illum quam qui error voluptas autem labore magni et.",
                            Latitude = 23.893852569518398,
                            Longitude = 89.096186946273008,
                            Name = "Hoppe - Parker"
                        },
                        new
                        {
                            Id = new Guid("bd8ae708-e890-45d8-8f71-9a67d52194df"),
                            Address = "615 Letha Spring, West Candida, Chile",
                            Description = "Voluptatem adipisci ullam impedit perspiciatis molestiae.",
                            Latitude = 23.897821323884944,
                            Longitude = 89.157936265188766,
                            Name = "Wiza - Kozey"
                        },
                        new
                        {
                            Id = new Guid("86c389d1-85f8-48f7-8668-a71fff93ed92"),
                            Address = "7688 Bogan Summit, Buckridgeberg, Venezuela",
                            Description = "Earum delectus consequatur non earum voluptatem veritatis.",
                            Latitude = 23.898183963633816,
                            Longitude = 89.147198474443755,
                            Name = "Olson and Sons"
                        },
                        new
                        {
                            Id = new Guid("86ab2717-5459-43fc-8140-52282f04870c"),
                            Address = "264 Gusikowski Route, New Kaylee, Tanzania",
                            Description = "Qui illo autem deserunt aut aut magni at.",
                            Latitude = 23.886076285307173,
                            Longitude = 89.135409407287781,
                            Name = "Donnelly - Cole"
                        },
                        new
                        {
                            Id = new Guid("73b52805-ee3d-4d5e-a7d9-600a892a17f3"),
                            Address = "1534 Hodkiewicz Forges, Hazletown, Gambia",
                            Description = "Consequatur temporibus et a et est id dignissimos.",
                            Latitude = 23.904779150376335,
                            Longitude = 89.154724066092015,
                            Name = "Mante - Boehm"
                        },
                        new
                        {
                            Id = new Guid("dda5efcc-4b45-42b3-9f1e-418ced4e2f02"),
                            Address = "248 Stoltenberg Key, South Agnesbury, Morocco",
                            Description = "Nihil suscipit nisi cum eveniet.",
                            Latitude = 23.901119343954505,
                            Longitude = 89.150110198121368,
                            Name = "Hudson - Nicolas"
                        },
                        new
                        {
                            Id = new Guid("64289b3d-1a5b-463e-a560-93ffbf693bd6"),
                            Address = "1707 Salma Walk, Port Astrid, Tuvalu",
                            Description = "Voluptatem eos amet ipsa qui similique sit.",
                            Latitude = 23.900753343601696,
                            Longitude = 89.098318725078599,
                            Name = "Kautzer and Sons"
                        },
                        new
                        {
                            Id = new Guid("866fad0d-10f4-415f-af7a-3cbbf0b47b5e"),
                            Address = "683 Gutkowski Villages, North Doug, Uzbekistan",
                            Description = "Dolorem id ex.",
                            Latitude = 23.732884894441217,
                            Longitude = 90.418988988463468,
                            Name = "Runolfsdottir, Ankunding and Bernhard"
                        },
                        new
                        {
                            Id = new Guid("cf66f5d8-db62-477c-a1e5-5052331c7076"),
                            Address = "63819 Cummings Ways, Treutelfort, Guinea-Bissau",
                            Description = "Nesciunt ab ipsa perspiciatis et maxime voluptates modi.",
                            Latitude = 23.746040678365418,
                            Longitude = 90.419100391787211,
                            Name = "Casper Inc"
                        },
                        new
                        {
                            Id = new Guid("fa5037da-e3bc-4432-ace5-70c5db8d7c8c"),
                            Address = "1718 Fahey Trace, Jackytown, Afghanistan",
                            Description = "Excepturi dignissimos eum.",
                            Latitude = 23.733415456752216,
                            Longitude = 90.434519230234329,
                            Name = "Daniel, Hand and Daugherty"
                        },
                        new
                        {
                            Id = new Guid("e197306c-4464-415d-bc76-a4c711b02791"),
                            Address = "151 Doyle Park, East Audreanneland, Reunion",
                            Description = "Quia ullam eum voluptatum vel facilis tenetur cupiditate enim.",
                            Latitude = 23.770445231415888,
                            Longitude = 90.36327606981483,
                            Name = "Kutch - Hyatt"
                        },
                        new
                        {
                            Id = new Guid("76f09f6b-2c3f-4ddb-8adf-0f36ee949c17"),
                            Address = "1944 Kurtis Views, Hazleview, Latvia",
                            Description = "A veritatis eveniet labore tenetur velit qui corrupti nulla.",
                            Latitude = 23.763870912795518,
                            Longitude = 90.448954858863843,
                            Name = "Kovacek - Bernhard"
                        },
                        new
                        {
                            Id = new Guid("59b98f97-d4c7-48dd-901d-68adaab4994b"),
                            Address = "61144 Maddison Walks, Russelchester, Denmark",
                            Description = "Perferendis dolorem qui possimus illo.",
                            Latitude = 23.763629939587005,
                            Longitude = 90.42218834065153,
                            Name = "Dooley Inc"
                        },
                        new
                        {
                            Id = new Guid("a27f8946-24b1-4872-bcff-af56d425e764"),
                            Address = "9832 Selina Springs, Kshlerinchester, Ukraine",
                            Description = "Cupiditate impedit ut laudantium a exercitationem et expedita.",
                            Latitude = 23.743396294983235,
                            Longitude = 90.441444164453443,
                            Name = "Greenholt Inc"
                        },
                        new
                        {
                            Id = new Guid("3281ace4-5746-4068-8cc4-2a2bd011f8fa"),
                            Address = "8041 Donnie Passage, East Solonbury, Montenegro",
                            Description = "Et blanditiis quis aspernatur.",
                            Latitude = 23.754479865340159,
                            Longitude = 90.438196552407234,
                            Name = "Borer - Nicolas"
                        },
                        new
                        {
                            Id = new Guid("139406c3-9839-4b7b-bbca-4d40cb86dfe3"),
                            Address = "8217 Maria Trafficway, West Samaraport, Mozambique",
                            Description = "Et aut quia magnam.",
                            Latitude = 23.741837646267591,
                            Longitude = 90.391849413150382,
                            Name = "Rau - Quitzon"
                        },
                        new
                        {
                            Id = new Guid("445c7c0a-7a09-4028-b08e-7360cf4b1369"),
                            Address = "274 Willms Lights, Violatown, Comoros",
                            Description = "Aut dicta neque repellendus tempore iste exercitationem debitis repellendus.",
                            Latitude = 23.739473610583165,
                            Longitude = 90.355776024743818,
                            Name = "Johnston - Wuckert"
                        },
                        new
                        {
                            Id = new Guid("4904751b-1a15-45a1-a1ab-dcdfe0eeda95"),
                            Address = "6614 Rutherford Avenue, Port Rey, Congo",
                            Description = "Facere vel atque molestias maiores dolor ut iusto.",
                            Latitude = 23.759017799885253,
                            Longitude = 90.375942982587532,
                            Name = "Hessel Group"
                        },
                        new
                        {
                            Id = new Guid("a2704293-efbd-4a54-85e4-3d9884921bb7"),
                            Address = "54420 Orion Expressway, Port Harrison, Israel",
                            Description = "Mollitia maxime eos ab blanditiis facere eum.",
                            Latitude = 23.770720194626392,
                            Longitude = 90.384040799667858,
                            Name = "Walsh, Wiegand and Keeling"
                        },
                        new
                        {
                            Id = new Guid("988200fa-90db-4fe7-b936-c3e77a0a4177"),
                            Address = "63126 Langworth Rapids, Kesslerberg, British Indian Ocean Territory (Chagos Archipelago)",
                            Description = "Veniam possimus molestiae veritatis deleniti est et facilis.",
                            Latitude = 23.758622802901044,
                            Longitude = 90.357376907496644,
                            Name = "Schulist and Sons"
                        },
                        new
                        {
                            Id = new Guid("f346adfb-32a1-40d9-a5be-cb0e77e8c6bc"),
                            Address = "413 Moen Track, McDermottland, Kyrgyz Republic",
                            Description = "Ut et dolores quis fuga quod.",
                            Latitude = 23.750842518473533,
                            Longitude = 90.362046833173807,
                            Name = "Blick, Ryan and Schowalter"
                        },
                        new
                        {
                            Id = new Guid("9d97d88d-b910-4d05-8b73-cf547236ebb9"),
                            Address = "27650 Stanton Walk, North Jesse, Rwanda",
                            Description = "Labore laudantium sed et consequuntur ut dignissimos sed repellendus.",
                            Latitude = 23.744623304691064,
                            Longitude = 90.451755202708242,
                            Name = "Keeling and Sons"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Models.ParkingSpace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ParkingLotId")
                        .HasColumnType("TEXT");

                    b.Property<int>("PricePerHour")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParkingLotId");

                    b.ToTable("ParkingSpaces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("989a40e2-f78f-438d-95fb-3606d615ce12"),
                            Capacity = 17,
                            ParkingLotId = new Guid("13e0dfe0-5eac-4777-8ea3-7eb029491fb4"),
                            PricePerHour = 500,
                            SectionName = "C-9",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("040f8f50-5e8e-472a-9314-7e3f19bb51ea"),
                            Capacity = 39,
                            ParkingLotId = new Guid("73b52805-ee3d-4d5e-a7d9-600a892a17f3"),
                            PricePerHour = 500,
                            SectionName = "D-2",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("672dbb5b-3c60-4bd3-93f5-2090bcb35ff7"),
                            Capacity = 33,
                            ParkingLotId = new Guid("bd8ae708-e890-45d8-8f71-9a67d52194df"),
                            PricePerHour = 150,
                            SectionName = "B-17",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("9562d554-a0bb-42a1-9823-d92671dedd86"),
                            Capacity = 33,
                            ParkingLotId = new Guid("61c9ce1f-b4ee-49e4-ad17-334d2b2db138"),
                            PricePerHour = 500,
                            SectionName = "A-17",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("29c791e9-0841-40a7-a092-0aa2b6ade445"),
                            Capacity = 16,
                            ParkingLotId = new Guid("b7bab51f-45c0-4231-aaee-c08c76b77dcc"),
                            PricePerHour = 300,
                            SectionName = "B-7",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("6257af59-9dfa-4d0e-987e-9fc2ab109481"),
                            Capacity = 41,
                            ParkingLotId = new Guid("61c9ce1f-b4ee-49e4-ad17-334d2b2db138"),
                            PricePerHour = 300,
                            SectionName = "A-4",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("c4f6d5c0-d844-4383-a0e6-5b5c5e1d2cca"),
                            Capacity = 49,
                            ParkingLotId = new Guid("0172c101-551e-458d-ad5e-4dc766c71318"),
                            PricePerHour = 500,
                            SectionName = "B-5",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("8e6b2c81-03ea-470c-865c-c52635e9d91d"),
                            Capacity = 30,
                            ParkingLotId = new Guid("f53e9bac-18d3-4f91-8cc3-23bbd4c2202f"),
                            PricePerHour = 100,
                            SectionName = "D-18",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("ea7175bf-e5eb-4e8c-91ce-f8bd86e39f4d"),
                            Capacity = 45,
                            ParkingLotId = new Guid("e625751d-553c-46c0-b10b-6ff1239eb152"),
                            PricePerHour = 300,
                            SectionName = "B-17",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("481d837e-2db5-42ea-a9a3-474de26b587f"),
                            Capacity = 38,
                            ParkingLotId = new Guid("13e0dfe0-5eac-4777-8ea3-7eb029491fb4"),
                            PricePerHour = 150,
                            SectionName = "B-9",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("d1d56aee-ffe6-44b0-b0a8-ca1392301935"),
                            Capacity = 16,
                            ParkingLotId = new Guid("86c389d1-85f8-48f7-8668-a71fff93ed92"),
                            PricePerHour = 300,
                            SectionName = "B-18",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("e33150d6-0711-4997-b734-e7db312e0b5f"),
                            Capacity = 27,
                            ParkingLotId = new Guid("f53e9bac-18d3-4f91-8cc3-23bbd4c2202f"),
                            PricePerHour = 150,
                            SectionName = "D-16",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("b1d847e3-c95c-4e03-8e4b-7841c405dda3"),
                            Capacity = 34,
                            ParkingLotId = new Guid("13e0dfe0-5eac-4777-8ea3-7eb029491fb4"),
                            PricePerHour = 150,
                            SectionName = "A-18",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("68c2e7b3-8163-4a13-8fc9-fae4aafd2670"),
                            Capacity = 39,
                            ParkingLotId = new Guid("86ab2717-5459-43fc-8140-52282f04870c"),
                            PricePerHour = 200,
                            SectionName = "B-14",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("1979f296-5fad-4903-aa0f-79c39773f2cb"),
                            Capacity = 17,
                            ParkingLotId = new Guid("13e0dfe0-5eac-4777-8ea3-7eb029491fb4"),
                            PricePerHour = 300,
                            SectionName = "A-15",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("186cf141-dfe7-420b-9cdf-8ffc32f60150"),
                            Capacity = 46,
                            ParkingLotId = new Guid("abce056e-eb75-4d49-9f85-73f17ff0bc12"),
                            PricePerHour = 200,
                            SectionName = "D-7",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("144ffd92-ab07-48ae-831f-1e3376106af5"),
                            Capacity = 50,
                            ParkingLotId = new Guid("86c389d1-85f8-48f7-8668-a71fff93ed92"),
                            PricePerHour = 100,
                            SectionName = "C-16",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("33d3efbf-a916-48bb-b42a-2892abf6b7d1"),
                            Capacity = 26,
                            ParkingLotId = new Guid("a5e7342e-cf74-4886-b5a8-cb918c71b193"),
                            PricePerHour = 500,
                            SectionName = "C-12",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("08764a3b-8fee-48ba-86d7-7a8c8232a825"),
                            Capacity = 11,
                            ParkingLotId = new Guid("7719d308-09f3-4734-98fd-575b7493c6f7"),
                            PricePerHour = 100,
                            SectionName = "A-15",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("fd57a9f1-0907-45ef-bb1d-3927de73b6e0"),
                            Capacity = 37,
                            ParkingLotId = new Guid("abce056e-eb75-4d49-9f85-73f17ff0bc12"),
                            PricePerHour = 100,
                            SectionName = "B-19",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("08a0941f-5162-4251-bebc-28720d5ed2f5"),
                            Capacity = 14,
                            ParkingLotId = new Guid("b7bab51f-45c0-4231-aaee-c08c76b77dcc"),
                            PricePerHour = 150,
                            SectionName = "A-18",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("3ed9d122-2376-4d52-a3b8-aeed887b550c"),
                            Capacity = 32,
                            ParkingLotId = new Guid("13e0dfe0-5eac-4777-8ea3-7eb029491fb4"),
                            PricePerHour = 200,
                            SectionName = "B-10",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("4c1b3c97-9674-442c-84fa-d157ef04c036"),
                            Capacity = 31,
                            ParkingLotId = new Guid("a5e7342e-cf74-4886-b5a8-cb918c71b193"),
                            PricePerHour = 200,
                            SectionName = "D-9",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("7b91867f-3fe0-4b9e-9457-d839d47092e7"),
                            Capacity = 39,
                            ParkingLotId = new Guid("86ab2717-5459-43fc-8140-52282f04870c"),
                            PricePerHour = 200,
                            SectionName = "A-6",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("b5fb5ae8-a485-47d0-811f-b8ae26389493"),
                            Capacity = 36,
                            ParkingLotId = new Guid("86c389d1-85f8-48f7-8668-a71fff93ed92"),
                            PricePerHour = 100,
                            SectionName = "C-1",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("05a5bcb7-cee2-4ac4-9fda-df13b7f2d2a1"),
                            Capacity = 39,
                            ParkingLotId = new Guid("73b52805-ee3d-4d5e-a7d9-600a892a17f3"),
                            PricePerHour = 150,
                            SectionName = "D-16",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("ada19218-5d79-44c4-87fa-c84afe90f081"),
                            Capacity = 39,
                            ParkingLotId = new Guid("64289b3d-1a5b-463e-a560-93ffbf693bd6"),
                            PricePerHour = 500,
                            SectionName = "B-1",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("70af49c0-8cf3-4457-b8c5-74c567eae80d"),
                            Capacity = 39,
                            ParkingLotId = new Guid("64289b3d-1a5b-463e-a560-93ffbf693bd6"),
                            PricePerHour = 100,
                            SectionName = "B-15",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("f35b6727-463b-4719-962a-ecc1775413ee"),
                            Capacity = 10,
                            ParkingLotId = new Guid("a5e7342e-cf74-4886-b5a8-cb918c71b193"),
                            PricePerHour = 500,
                            SectionName = "C-6",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("d3816d2b-c970-4510-add0-cf253ad13282"),
                            Capacity = 27,
                            ParkingLotId = new Guid("f53e9bac-18d3-4f91-8cc3-23bbd4c2202f"),
                            PricePerHour = 100,
                            SectionName = "B-18",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("deee6b25-678d-4f96-9ca5-d1ec751e883b"),
                            Capacity = 11,
                            ParkingLotId = new Guid("b7bab51f-45c0-4231-aaee-c08c76b77dcc"),
                            PricePerHour = 150,
                            SectionName = "A-19",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("80c97962-f52d-4081-8c95-2372140a5117"),
                            Capacity = 35,
                            ParkingLotId = new Guid("73b52805-ee3d-4d5e-a7d9-600a892a17f3"),
                            PricePerHour = 300,
                            SectionName = "C-4",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("bea46713-7c47-4fdd-8844-21caaf1812f9"),
                            Capacity = 11,
                            ParkingLotId = new Guid("64289b3d-1a5b-463e-a560-93ffbf693bd6"),
                            PricePerHour = 100,
                            SectionName = "B-9",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("43ad7d45-c7b6-4d3a-bf50-6b0fb77a4037"),
                            Capacity = 25,
                            ParkingLotId = new Guid("73b52805-ee3d-4d5e-a7d9-600a892a17f3"),
                            PricePerHour = 150,
                            SectionName = "C-10",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("fff3039d-5806-42e6-bb39-6666543d566f"),
                            Capacity = 31,
                            ParkingLotId = new Guid("e625751d-553c-46c0-b10b-6ff1239eb152"),
                            PricePerHour = 300,
                            SectionName = "A-1",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("5b3be4a8-dd8b-4fde-ab69-d1f615b22070"),
                            Capacity = 46,
                            ParkingLotId = new Guid("e625751d-553c-46c0-b10b-6ff1239eb152"),
                            PricePerHour = 200,
                            SectionName = "D-11",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("e50fc53a-31ab-4419-acd7-427ec5e5eb60"),
                            Capacity = 20,
                            ParkingLotId = new Guid("e625751d-553c-46c0-b10b-6ff1239eb152"),
                            PricePerHour = 100,
                            SectionName = "D-6",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("1c2dc280-0c05-474b-a024-d053fbdaf574"),
                            Capacity = 45,
                            ParkingLotId = new Guid("13e0dfe0-5eac-4777-8ea3-7eb029491fb4"),
                            PricePerHour = 300,
                            SectionName = "C-14",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("815b9f6a-764e-4d82-bf2b-34c5961c0243"),
                            Capacity = 28,
                            ParkingLotId = new Guid("61c9ce1f-b4ee-49e4-ad17-334d2b2db138"),
                            PricePerHour = 200,
                            SectionName = "C-3",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("ef74ac10-5309-4e7a-88d2-06588239a4a7"),
                            Capacity = 41,
                            ParkingLotId = new Guid("86ab2717-5459-43fc-8140-52282f04870c"),
                            PricePerHour = 150,
                            SectionName = "B-8",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("ce5ec044-cccb-4a86-bdae-ab275982adea"),
                            Capacity = 25,
                            ParkingLotId = new Guid("61c9ce1f-b4ee-49e4-ad17-334d2b2db138"),
                            PricePerHour = 300,
                            SectionName = "C-1",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("336cbd44-a0b5-4f85-bfd7-4c4286eb6374"),
                            Capacity = 34,
                            ParkingLotId = new Guid("7719d308-09f3-4734-98fd-575b7493c6f7"),
                            PricePerHour = 200,
                            SectionName = "A-18",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("65e4be9f-3300-404b-a946-675f54aa4f36"),
                            Capacity = 17,
                            ParkingLotId = new Guid("7719d308-09f3-4734-98fd-575b7493c6f7"),
                            PricePerHour = 200,
                            SectionName = "C-5",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("5b2a747b-f4f6-4293-9aa2-fbc5530af963"),
                            Capacity = 47,
                            ParkingLotId = new Guid("b7bab51f-45c0-4231-aaee-c08c76b77dcc"),
                            PricePerHour = 500,
                            SectionName = "B-1",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("223351d4-ddb5-469e-93ce-500df7ecd371"),
                            Capacity = 21,
                            ParkingLotId = new Guid("dda5efcc-4b45-42b3-9f1e-418ced4e2f02"),
                            PricePerHour = 500,
                            SectionName = "A-4",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("eda201c1-cf7e-4fa4-ac8d-795061641b57"),
                            Capacity = 22,
                            ParkingLotId = new Guid("139406c3-9839-4b7b-bbca-4d40cb86dfe3"),
                            PricePerHour = 150,
                            SectionName = "A-19",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("77188b84-4864-43c3-8c2f-b552c073bee3"),
                            Capacity = 18,
                            ParkingLotId = new Guid("3281ace4-5746-4068-8cc4-2a2bd011f8fa"),
                            PricePerHour = 500,
                            SectionName = "B-14",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("af9c836e-0f02-48e1-964c-750a520448d5"),
                            Capacity = 45,
                            ParkingLotId = new Guid("fa5037da-e3bc-4432-ace5-70c5db8d7c8c"),
                            PricePerHour = 150,
                            SectionName = "A-5",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("ed9e12ed-81ff-43b9-a4dd-02de6c856a51"),
                            Capacity = 39,
                            ParkingLotId = new Guid("988200fa-90db-4fe7-b936-c3e77a0a4177"),
                            PricePerHour = 150,
                            SectionName = "B-6",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("adaa0c3a-c3b8-4806-b6f0-461635182c92"),
                            Capacity = 31,
                            ParkingLotId = new Guid("a27f8946-24b1-4872-bcff-af56d425e764"),
                            PricePerHour = 300,
                            SectionName = "D-9",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("a859a30c-c873-4d51-8c09-9aa4af1c9114"),
                            Capacity = 41,
                            ParkingLotId = new Guid("fa5037da-e3bc-4432-ace5-70c5db8d7c8c"),
                            PricePerHour = 500,
                            SectionName = "B-8",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("041f00a0-0224-43f5-9610-64e52de0faf5"),
                            Capacity = 39,
                            ParkingLotId = new Guid("4904751b-1a15-45a1-a1ab-dcdfe0eeda95"),
                            PricePerHour = 100,
                            SectionName = "B-3",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("7c06afcc-3763-45b9-b5cc-65f610610c49"),
                            Capacity = 36,
                            ParkingLotId = new Guid("4904751b-1a15-45a1-a1ab-dcdfe0eeda95"),
                            PricePerHour = 300,
                            SectionName = "B-16",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("8b9f098c-aaa6-46f7-a080-d2d22df2d32a"),
                            Capacity = 21,
                            ParkingLotId = new Guid("a27f8946-24b1-4872-bcff-af56d425e764"),
                            PricePerHour = 100,
                            SectionName = "B-2",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("674b54c1-5f8e-4e36-9f99-078d6ac5d67c"),
                            Capacity = 50,
                            ParkingLotId = new Guid("4904751b-1a15-45a1-a1ab-dcdfe0eeda95"),
                            PricePerHour = 200,
                            SectionName = "C-2",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("cd3d49f7-7f9a-455c-ba54-840d631c8f23"),
                            Capacity = 40,
                            ParkingLotId = new Guid("a2704293-efbd-4a54-85e4-3d9884921bb7"),
                            PricePerHour = 500,
                            SectionName = "C-8",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("9582bb3a-fb6b-4180-8f5c-864b700ae745"),
                            Capacity = 44,
                            ParkingLotId = new Guid("59b98f97-d4c7-48dd-901d-68adaab4994b"),
                            PricePerHour = 100,
                            SectionName = "A-15",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("216c1def-1e3b-4ca8-babb-dec1156a3c26"),
                            Capacity = 23,
                            ParkingLotId = new Guid("a2704293-efbd-4a54-85e4-3d9884921bb7"),
                            PricePerHour = 500,
                            SectionName = "A-14",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("9c33b6ff-ee08-4a60-800c-d2f5304824cb"),
                            Capacity = 44,
                            ParkingLotId = new Guid("cf66f5d8-db62-477c-a1e5-5052331c7076"),
                            PricePerHour = 100,
                            SectionName = "C-14",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("f36cec52-ca5e-43d1-ac89-1b781dc29473"),
                            Capacity = 47,
                            ParkingLotId = new Guid("988200fa-90db-4fe7-b936-c3e77a0a4177"),
                            PricePerHour = 100,
                            SectionName = "A-4",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("7ffaa177-f850-4f7b-8129-dc94c9854b26"),
                            Capacity = 42,
                            ParkingLotId = new Guid("4904751b-1a15-45a1-a1ab-dcdfe0eeda95"),
                            PricePerHour = 500,
                            SectionName = "A-16",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("d258f8d1-a725-48cc-949f-785026a2beb0"),
                            Capacity = 30,
                            ParkingLotId = new Guid("4904751b-1a15-45a1-a1ab-dcdfe0eeda95"),
                            PricePerHour = 500,
                            SectionName = "C-10",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("36a9e684-0406-4929-994f-bddd913c9e12"),
                            Capacity = 16,
                            ParkingLotId = new Guid("4904751b-1a15-45a1-a1ab-dcdfe0eeda95"),
                            PricePerHour = 500,
                            SectionName = "A-1",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("eefb01e9-97a2-4e5e-997b-2cb410eaf0cc"),
                            Capacity = 17,
                            ParkingLotId = new Guid("59b98f97-d4c7-48dd-901d-68adaab4994b"),
                            PricePerHour = 300,
                            SectionName = "D-11",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("c718c356-22d6-42bb-a987-fc46412c18fc"),
                            Capacity = 44,
                            ParkingLotId = new Guid("a2704293-efbd-4a54-85e4-3d9884921bb7"),
                            PricePerHour = 500,
                            SectionName = "B-20",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("d3737b42-5f0e-4a8e-95a8-7b3c172ccaa7"),
                            Capacity = 13,
                            ParkingLotId = new Guid("9d97d88d-b910-4d05-8b73-cf547236ebb9"),
                            PricePerHour = 100,
                            SectionName = "C-15",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("b744e8c9-1a98-4e68-ab7f-bb497b6722e9"),
                            Capacity = 39,
                            ParkingLotId = new Guid("4904751b-1a15-45a1-a1ab-dcdfe0eeda95"),
                            PricePerHour = 100,
                            SectionName = "C-9",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("5e7d1776-cd72-4e7c-9f66-de5f635827ef"),
                            Capacity = 14,
                            ParkingLotId = new Guid("fa5037da-e3bc-4432-ace5-70c5db8d7c8c"),
                            PricePerHour = 300,
                            SectionName = "B-18",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("1983628d-5b81-4cba-8a99-a8a568f6747e"),
                            Capacity = 18,
                            ParkingLotId = new Guid("e197306c-4464-415d-bc76-a4c711b02791"),
                            PricePerHour = 500,
                            SectionName = "D-13",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("ed4d2606-2861-4fe4-b360-19e74778e44f"),
                            Capacity = 36,
                            ParkingLotId = new Guid("cf66f5d8-db62-477c-a1e5-5052331c7076"),
                            PricePerHour = 300,
                            SectionName = "D-11",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("92853e84-e149-46a0-b8ba-70158c287a9f"),
                            Capacity = 21,
                            ParkingLotId = new Guid("e197306c-4464-415d-bc76-a4c711b02791"),
                            PricePerHour = 500,
                            SectionName = "A-5",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("46535a26-a524-43ff-8e2d-83d0edf00900"),
                            Capacity = 35,
                            ParkingLotId = new Guid("988200fa-90db-4fe7-b936-c3e77a0a4177"),
                            PricePerHour = 150,
                            SectionName = "B-3",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("bb2fb330-5fb0-4e8f-8448-a1806be8cd09"),
                            Capacity = 31,
                            ParkingLotId = new Guid("139406c3-9839-4b7b-bbca-4d40cb86dfe3"),
                            PricePerHour = 100,
                            SectionName = "C-4",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("9df752f0-a871-4d7e-ada8-b30d3867af91"),
                            Capacity = 27,
                            ParkingLotId = new Guid("a27f8946-24b1-4872-bcff-af56d425e764"),
                            PricePerHour = 300,
                            SectionName = "C-9",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("6efa9c0a-d13e-4835-8d31-7b1dc2c67929"),
                            Capacity = 41,
                            ParkingLotId = new Guid("3281ace4-5746-4068-8cc4-2a2bd011f8fa"),
                            PricePerHour = 150,
                            SectionName = "D-10",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("6bf09931-ff51-4c96-bfd0-83a0b218cd40"),
                            Capacity = 27,
                            ParkingLotId = new Guid("988200fa-90db-4fe7-b936-c3e77a0a4177"),
                            PricePerHour = 200,
                            SectionName = "D-4",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("c4c38539-7437-43b6-b082-3e878a4142e5"),
                            Capacity = 15,
                            ParkingLotId = new Guid("cf66f5d8-db62-477c-a1e5-5052331c7076"),
                            PricePerHour = 500,
                            SectionName = "D-9",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("6ca43c8e-134d-4a18-9c2d-09660191865e"),
                            Capacity = 19,
                            ParkingLotId = new Guid("f346adfb-32a1-40d9-a5be-cb0e77e8c6bc"),
                            PricePerHour = 150,
                            SectionName = "C-10",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("e03f5be1-0c15-4972-b19f-09c80ade936a"),
                            Capacity = 45,
                            ParkingLotId = new Guid("fa5037da-e3bc-4432-ace5-70c5db8d7c8c"),
                            PricePerHour = 500,
                            SectionName = "D-11",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("f4a94b1a-7f49-4edc-ae90-aa7b39def8d5"),
                            Capacity = 49,
                            ParkingLotId = new Guid("4904751b-1a15-45a1-a1ab-dcdfe0eeda95"),
                            PricePerHour = 100,
                            SectionName = "A-17",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("e6852ca0-f593-4ac6-be46-c10f65807216"),
                            Capacity = 44,
                            ParkingLotId = new Guid("988200fa-90db-4fe7-b936-c3e77a0a4177"),
                            PricePerHour = 500,
                            SectionName = "C-9",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("087a3920-bca6-4ddd-9232-39d04e6caacc"),
                            Capacity = 37,
                            ParkingLotId = new Guid("a2704293-efbd-4a54-85e4-3d9884921bb7"),
                            PricePerHour = 200,
                            SectionName = "D-2",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("3a24866b-dd8f-4f14-92d3-3f698f04f782"),
                            Capacity = 21,
                            ParkingLotId = new Guid("a2704293-efbd-4a54-85e4-3d9884921bb7"),
                            PricePerHour = 100,
                            SectionName = "D-13",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("ab1dc41b-51cc-46f4-ae8c-c455052dce3b"),
                            Capacity = 44,
                            ParkingLotId = new Guid("9d97d88d-b910-4d05-8b73-cf547236ebb9"),
                            PricePerHour = 500,
                            SectionName = "B-6",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("3028198a-d1a8-440d-9a08-26782c51a79d"),
                            Capacity = 46,
                            ParkingLotId = new Guid("988200fa-90db-4fe7-b936-c3e77a0a4177"),
                            PricePerHour = 100,
                            SectionName = "C-12",
                            VehicleType = "TRUCK"
                        },
                        new
                        {
                            Id = new Guid("35f10dbf-0832-4db7-981e-10d6018b8b5d"),
                            Capacity = 50,
                            ParkingLotId = new Guid("139406c3-9839-4b7b-bbca-4d40cb86dfe3"),
                            PricePerHour = 150,
                            SectionName = "B-14",
                            VehicleType = "MOTORCYCLE"
                        },
                        new
                        {
                            Id = new Guid("b198b273-d76d-4f03-b9fb-e380548d0074"),
                            Capacity = 12,
                            ParkingLotId = new Guid("9d97d88d-b910-4d05-8b73-cf547236ebb9"),
                            PricePerHour = 300,
                            SectionName = "A-3",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("3e23a9ef-2f19-43d3-99e4-0f2aa87d8cc5"),
                            Capacity = 39,
                            ParkingLotId = new Guid("988200fa-90db-4fe7-b936-c3e77a0a4177"),
                            PricePerHour = 150,
                            SectionName = "A-17",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("1122c289-87bb-4f33-a005-f1cad642588b"),
                            Capacity = 11,
                            ParkingLotId = new Guid("fa5037da-e3bc-4432-ace5-70c5db8d7c8c"),
                            PricePerHour = 200,
                            SectionName = "B-10",
                            VehicleType = "CAR"
                        },
                        new
                        {
                            Id = new Guid("63ccb230-54d5-4f63-ab6b-a7b6c5ac793f"),
                            Capacity = 17,
                            ParkingLotId = new Guid("e197306c-4464-415d-bc76-a4c711b02791"),
                            PricePerHour = 100,
                            SectionName = "C-15",
                            VehicleType = "TRUCK"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Models.RefreshToken", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Token");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Domain.Entities.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "6012500d-cedb-40ba-a452-53aa1c846c52",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "d54d3b27-30ae-488c-871c-5826c9679dce",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Models.ParkingSpace", b =>
                {
                    b.HasOne("Domain.Entities.Models.ParkingLot", "ParkingLot")
                        .WithMany("ParkingSpaces")
                        .HasForeignKey("ParkingLotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParkingLot");
                });

            modelBuilder.Entity("Domain.Entities.Models.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.Models.User", "User")
                        .WithOne("RefreshToken")
                        .HasForeignKey("Domain.Entities.Models.RefreshToken", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Domain.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Domain.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Domain.Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Models.ParkingLot", b =>
                {
                    b.Navigation("ParkingSpaces");
                });

            modelBuilder.Entity("Domain.Entities.Models.User", b =>
                {
                    b.Navigation("RefreshToken");
                });
#pragma warning restore 612, 618
        }
    }
}
